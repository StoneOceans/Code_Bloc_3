name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    name: Backend Django
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/test_db
      DJANGO_SETTINGS_MODULE: backend.settings
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-interaction --no-ansi

      - name: Apply migrations
        run: poetry run python manage.py migrate --noinput

      - name: Run Django tests & collect coverage
        run: |
          poetry run coverage run --source='.' manage.py test
          poetry run coverage report

      - name: Lint with flake8
        run: poetry run flake8
frontend:
  name: Frontend React
  runs-on: ubuntu-latest
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci
      working-directory: frontend

    - name: Run lint
      run: npm run lint
      working-directory: frontend

    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false
      working-directory: frontend

    - name: Build production bundle
      run: npm run build
      working-directory: frontend

    - name: Debug build directory
      run: ls -la frontend/build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build

  deploy:
    name: DÃ©ploiement SSH
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download frontend-build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/build

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to SSH server
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd /var/www/Code_Bloc_3/app_code
            git pull origin main
            source env/bin/activate
            pip install -r backend/requirements.txt
            npm ci --prefix frontend
            npm run build --prefix frontend
            sudo systemctl restart gunicorn
            sudo systemctl restart apache2
